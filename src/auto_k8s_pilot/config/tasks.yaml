# research_task:
#   description: >
#     Conduct a thorough research about {topic}
#     Make sure you find any interesting and relevant information given
#     the current year is {current_year}.
#   expected_output: >
#     A list with 10 bullet points of the most relevant information about {topic}
#   agent: researcher

# reporting_task:
#   description: >
#     Review the context you got and expand each topic into a full section for a report.
#     Make sure the report is detailed and contains any and all relevant information.
#   expected_output: >
#     A fully fledged report with the main topics, each with a full section of information.
#     Formatted as markdown without '```'
#   agent: reporting_analyst

k8s_pods_overview:
  description: >
    Call kubectl_tool with action="get", kind="pods". 
    Always return ONLY the raw output from kubectl_tool. 
    Do not reformat or invent anything. 
    If kubectl_tool returns empty, output must be empty too.
  expected_output: >
    Exact stdout from kubectl_tool (wide format). No fabricated data.
  agent: k8s_operator
  inputs:
    namespace: all

explain_pods:
  description: >
    Take the raw kubectl output from the previous task and explain it in plain language.
    Summarize how many pods are running, pending, or failing, and which namespaces they belong to.
  expected_output: >
    Human-readable summary (paragraph + bullet points).
  agent: reporting_analyst

cluster_summary:
  description: >
    Analyze the raw kubectl get pods output and provide a high-level summary
    of what components are installed in the cluster. Group them by purpose:
    - core Kubernetes system pods
    - networking (CNI)
    - ingress
    - GitOps / CI/CD
    - monitoring, metrics, or others

    Explain in plain language what each component does and how it fits
    into the cluster architecture.
  expected_output: >
    Human-readable explanation of the cluster architecture:
    - list of detected components
    - their roles and responsibilities
    - notes on health (running vs pending/failing)
  agent: infra_architect


